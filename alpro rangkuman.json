{
  "metadata": {
    "kernelspec": {
      "name": "python",
      "display_name": "Python (Pyodide)",
      "language": "python"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    }
  },
  "nbformat_minor": 4,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "code",
      "source": "pertemuan 1",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "# Variabel\nNama = \"Rendika\"\numur = 50\nstatus_pernikahan = \"Belum Menikah\"\nstatuspernikahan = \"Menikah\"",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "pertemuan 2",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "# Input bilangan dari pengguna\nbilangan1 = float(input(\"Masukkan bilangan pertama: \"))\nbilangan2 = float(input(\"Masukkan bilangan kedua: \"))\n\n# Hitung penjumlahan\nhasil = bilangan1 + bilangan2\n\n# Cetak hasil\nprint(\"Hasil penjumlahan:\", hasil)",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "pertemuan 3",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "umur = 20\nif umur >= 18:\n    print(\"Anda sudah dewasa.\") 3",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "pertemuan 4",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "x = 0\nif x > 0:\n    print(\"Positif\")\nelif x == 0:\n    print(\"Nol\")\nelse:\n    print(\"Negatif\")",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "x = 0\nprint(\"Positif\") if x > 0 else print(\"Nol\") if x == 0 else print(\"Negatif\")",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "raw",
      "source": "pertemuan 5",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "# nilai = 70\n# nilai = 69\nnilai = 59\n\nif nilai >= 90:\n    print(\"Anda mendapat nilai A\")\nelif nilai >= 80:\n    print(\"Anda mendapat nilai B\")\nelif nilai >= 70:\n    print(\"Anda mendapat nilai C\")\nelif nilai >= 60:\n    pass # Tidak melakukan apa-apa ketika nilai di atas 60\nelse:\n    print(\"Anda mendapat nilai D\")\n\nprint(\"Terima kasih atas usaha Anda!\")",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "pertemuan 6",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "# Input panjang dalam meter dari pengguna\npanjang_meter = float(input(\"Masukkan panjang dalam meter: \"))\n\n# Konversi panjang ke kilometer dan sentimeter\npanjang_kilometer = panjang_meter / 1000\npanjang_sentimeter = panjang_meter * 100\n\n# Cetak hasil\nprint(\"Panjang dalam kilometer:\", panjang_kilometer)\nprint(\"Panjang dalam sentimeter:\", panjang_sentimeter)",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "pertemuan 7",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    },
    {
      "cell_type": "code",
      "source": "# Input bilangan bulat positif dari pengguna\nn = int(input(\"Masukkan bilangan bulat positif: \"))\n\n# Inisialisasi hasil dengan nilai awal 1\nhasil = 1\n\n# Hitung faktorial\nfor i in range(1, n + 1):\n    hasil *= i\n\n# Cetak hasil\nprint(f\"Faktorial dari {n} adalah {hasil}\")\\",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "execution_count": null
    }
  ]
}